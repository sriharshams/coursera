}
## For each state, find the hospital of the given rank
## Return a data frame with the hospital names and the
## (abbreviated) state name
outputdf <- outputdf[order(outputdf$state),]
outputdf
}
tail(rankall("pneumonia", "worst"), 3)
rankall <- function(outcome, num = "best") {
## Read outcome data
outcome_data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outputdf <- data.frame(hospital=character(), state = character())
states <- outcome_data[!duplicated(outcome_data[c('State')]),]$State
states <- sort(states)
## Check that state and outcome are valid
#try(if(nrow(outcome_data[outcome_data$State==state,])==0) stop("invalid state"))
try(if(!(outcome=='heart attack' || outcome=='heart failure' || outcome=='pneumonia')) stop("invalid outcome"))
## Get data per sate
for(state in states ){
state_outcome_data <- outcome_data[outcome_data$State==state,]
#state_outcome_data[ state_outcome_data == "Not Available" ] = NA
good <- complete.cases(state_outcome_data)
state_outcome_data_good <- state_outcome_data[good,]
if(outcome == 'heart attack'){
state_outcome_data_outcome_sorted <- state_outcome_data_good[order(as.numeric(state_outcome_data_good$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack), state_outcome_data_good$Hospital.Name),]
state_outcome_data_outcome_sorted$Rank <- 1:nrow(state_outcome_data_outcome_sorted)
#state_outcome_data_outcome_sorted[(nrow(state_outcome_data_outcome_sorted)-6):nrow(state_outcome_data_outcome_sorted),c("Hospital.Name", "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack", "Rank")]
}
if(outcome == 'heart failure'){
state_outcome_data_outcome_sorted <- state_outcome_data_good[order(as.numeric(state_outcome_data_good$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure), state_outcome_data_good$Hospital.Name),]
state_outcome_data_outcome_sorted$Rank <- 1:nrow(state_outcome_data_outcome_sorted)
#state_outcome_data_outcome_sorted[(nrow(state_outcome_data_outcome_sorted)-6):nrow(state_outcome_data_outcome_sorted),c("Hospital.Name", "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure", "Rank")]
}
if(outcome == 'pneumonia'){
state_outcome_data_outcome_sorted <- state_outcome_data_good[order(as.numeric(state_outcome_data_good$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia), state_outcome_data_good$Hospital.Name),]
state_outcome_data_outcome_sorted$Rank <- 1:nrow(state_outcome_data_outcome_sorted)
#state_outcome_data_outcome_sorted[1:6,c("Hospital.Name", "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia", "Rank")]
}
#print(state)
#print(nrow(state_outcome_data_outcome_sorted))
if(num == "best"){
hospitalName <- state_outcome_data_outcome_sorted[1,c("Hospital.Name")]
state <- state_outcome_data_outcome_sorted[1,c("State")]
outputdf <- rbind(outputdf, data.frame(hospital=hospitalName, state = state))
}else
if(num == "worst"){
count = nrow(state_outcome_data_outcome_sorted)-1
hospitalName <- state_outcome_data_outcome_sorted[count,c("Hospital.Name")]
state <- state_outcome_data_outcome_sorted[count,c("State")]
print(hospitalName)
print(count)
print(state)
outputdf <- rbind(outputdf, data.frame(hospital=hospitalName, state = state))
}else
if(num >=1 && num <= nrow(state_outcome_data_outcome_sorted)){
hospitalName <- state_outcome_data_outcome_sorted[num,c("Hospital.Name")]
state <- state_outcome_data_outcome_sorted[num,c("State")]
outputdf <- rbind(outputdf, data.frame(hospital=hospitalName, state = state))
}else{
hospitalName <- NA
outputdf <- rbind(outputdf, data.frame(hospital=hospitalName, state = state))
}
}
## For each state, find the hospital of the given rank
## Return a data frame with the hospital names and the
## (abbreviated) state name
outputdf <- outputdf[order(outputdf$state),]
outputdf
}
tail(rankall("pneumonia", "worst"), 3)
outcome_data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outputdf <- data.frame(hospital=character(), state = character())
states <- outcome_data[!duplicated(outcome_data[c('State')]),]$State
states <- sort(states)
state <- 'WY'
outcome='pneumonia'
state_outcome_data <- outcome_data[outcome_data$State==state,]
#state_outcome_data[ state_outcome_data == "Not Available" ] = NA
good <- complete.cases(state_outcome_data)
state_outcome_data_good <- state_outcome_data[good,]
if(outcome == 'heart attack'){
state_outcome_data_outcome_sorted <- state_outcome_data_good[order(as.numeric(state_outcome_data_good$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack), state_outcome_data_good$Hospital.Name),]
state_outcome_data_outcome_sorted$Rank <- 1:nrow(state_outcome_data_outcome_sorted)
#state_outcome_data_outcome_sorted[(nrow(state_outcome_data_outcome_sorted)-6):nrow(state_outcome_data_outcome_sorted),c("Hospital.Name", "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack", "Rank")]
}
if(outcome == 'heart failure'){
state_outcome_data_outcome_sorted <- state_outcome_data_good[order(as.numeric(state_outcome_data_good$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure), state_outcome_data_good$Hospital.Name),]
state_outcome_data_outcome_sorted$Rank <- 1:nrow(state_outcome_data_outcome_sorted)
#state_outcome_data_outcome_sorted[(nrow(state_outcome_data_outcome_sorted)-6):nrow(state_outcome_data_outcome_sorted),c("Hospital.Name", "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure", "Rank")]
}
if(outcome == 'pneumonia'){
state_outcome_data_outcome_sorted <- state_outcome_data_good[order(as.numeric(state_outcome_data_good$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia), state_outcome_data_good$Hospital.Name),]
state_outcome_data_outcome_sorted$Rank <- 1:nrow(state_outcome_data_outcome_sorted)
#state_outcome_data_outcome_sorted[1:6,c("Hospital.Name", "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia", "Rank")]
}
View(state_outcome_data_outcome_sorted)
outcome_data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outputdf <- data.frame(hospital=character(), state = character())
states <- outcome_data[!duplicated(outcome_data[c('State')]),]$State
states <- sort(states)
state <- 'WY'
outcome='pneumonia'
state_outcome_data <- outcome_data[outcome_data$State==state,]
state_outcome_data[ state_outcome_data == "Not Available" ] = NA
good <- complete.cases(state_outcome_data)
state_outcome_data_good <- state_outcome_data[good,]
if(outcome == 'heart attack'){
state_outcome_data_outcome_sorted <- state_outcome_data_good[order(as.numeric(state_outcome_data_good$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack), state_outcome_data_good$Hospital.Name),]
state_outcome_data_outcome_sorted$Rank <- 1:nrow(state_outcome_data_outcome_sorted)
#state_outcome_data_outcome_sorted[(nrow(state_outcome_data_outcome_sorted)-6):nrow(state_outcome_data_outcome_sorted),c("Hospital.Name", "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack", "Rank")]
}
if(outcome == 'heart failure'){
state_outcome_data_outcome_sorted <- state_outcome_data_good[order(as.numeric(state_outcome_data_good$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure), state_outcome_data_good$Hospital.Name),]
state_outcome_data_outcome_sorted$Rank <- 1:nrow(state_outcome_data_outcome_sorted)
#state_outcome_data_outcome_sorted[(nrow(state_outcome_data_outcome_sorted)-6):nrow(state_outcome_data_outcome_sorted),c("Hospital.Name", "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure", "Rank")]
}
if(outcome == 'pneumonia'){
state_outcome_data_outcome_sorted <- state_outcome_data_good[order(as.numeric(state_outcome_data_good$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia), state_outcome_data_good$Hospital.Name),]
state_outcome_data_outcome_sorted$Rank <- 1:nrow(state_outcome_data_outcome_sorted)
#state_outcome_data_outcome_sorted[1:6,c("Hospital.Name", "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia", "Rank")]
}
View(state_outcome_data_outcome_sorted)
outcome_data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outputdf <- data.frame(hospital=character(), state = character())
states <- outcome_data[!duplicated(outcome_data[c('State')]),]$State
states <- sort(states)
state <- 'WY'
outcome='pneumonia'
state_outcome_data <- outcome_data[outcome_data$State==state,]
state_outcome_data[ state_outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia == "Not Available" ] = NA
good <- complete.cases(state_outcome_data)
state_outcome_data_good <- state_outcome_data[good,]
state_outcome_data <- outcome_data[outcome_data$State==state,]
state_outcome_data[ state_outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia == "Not Available" ]$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia = NA
good <- complete.cases(state_outcome_data)
state_outcome_data_good <- state_outcome_data[good,]
state_outcome_data_outcome_sorted <- state_outcome_data_good[order(as.numeric(state_outcome_data_good$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia), state_outcome_data_good$Hospital.Name),]
state_outcome_data_outcome_sorted$Rank <- 1:nrow(state_outcome_data_outcome_sorted)
#state_outcome_data_outcome_sorted[1:6,c("Hospital.Name", "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia", "Rank")]
}
View(state_outcome_data_outcome_sorted)
outcome_data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outputdf <- data.frame(hospital=character(), state = character())
states <- outcome_data[!duplicated(outcome_data[c('State')]),]$State
states <- sort(states)
state <- 'WY'
outcome='pneumonia'
state_outcome_data <- outcome_data[outcome_data$State==state,]
state_outcome_data[ state_outcome_data == "Not Available" ] <- NA
good <- complete.cases(state_outcome_data)
state_outcome_data_good <- state_outcome_data[good,]
state_outcome_data <- outcome_data[outcome_data$State==state,]
View(state_outcome_data)
state_outcome_data <- outcome_data[outcome_data$State==state,]
#state_outcome_data[ state_outcome_data == "Not Available" ] <- NA
state_outcome_data_outcome_sorted <- state_outcome_data_good[order(as.numeric(state_outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia), state_outcome_data$Hospital.Name),]
good <- complete.cases(state_outcome_data_outcome_sorted)
state_outcome_data_outcome_sorted <- state_outcome_data_outcome_sorted[good,]
View(state_outcome_data_outcome_sorted)
state_outcome_data <- outcome_data[outcome_data$State==state,]
#state_outcome_data[ state_outcome_data == "Not Available" ] <- NA
state_outcome_data_outcome_sorted <- state_outcome_data_good[order(as.numeric(state_outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia), state_outcome_data$Hospital.Name),]
View(state_outcome_data_outcome_sorted)
state_outcome_data <- outcome_data[outcome_data$State==state,]
#state_outcome_data[ state_outcome_data == "Not Available" ] <- NA
state_outcome_data_outcome_sorted <- state_outcome_data_good[order(as.numeric(state_outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia), state_outcome_data$Hospital.Name),]
bad <- is.na(state_outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia)
state_outcome_data_outcome_sorted <- state_outcome_data_outcome_sorted[!bad,]
state_outcome_data_outcome_sorted$Rank <- 1:nrow(state_outcome_data_outcome_sorted)
View(state_outcome_data_outcome_sorted)
outcome_data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outputdf <- data.frame(hospital=character(), state = character())
states <- outcome_data[!duplicated(outcome_data[c('State')]),]$State
states <- sort(states)
state <- 'WY'
outcome='pneumonia'
state_outcome_data <- outcome_data[outcome_data$State==state,]
state_outcome_data_outcome_sorted <- state_outcome_data_good[order(as.numeric(state_outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia), state_outcome_data$Hospital.Name),]
bad <- is.na(state_outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia)
state_outcome_data_outcome_sorted <- state_outcome_data_outcome_sorted[!bad,]
state_outcome_data_outcome_sorted$Rank <- 1:nrow(state_outcome_data_outcome_sorted)
outcome_data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outputdf <- data.frame(hospital=character(), state = character())
states <- outcome_data[!duplicated(outcome_data[c('State')]),]$State
states <- sort(states)
state <- 'WY'
outcome='pneumonia'
state_outcome_data <- outcome_data[outcome_data$State==state,]
state_outcome_data_outcome_sorted <- state_outcome_data[order(as.numeric(state_outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia), state_outcome_data$Hospital.Name),]
bad <- is.na(state_outcome_data_outcome_sorted$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia)
state_outcome_data_outcome_sorted <- state_outcome_data_outcome_sorted[!bad,]
state_outcome_data_outcome_sorted$Rank <- 1:nrow(state_outcome_data_outcome_sorted)
View(state_outcome_data_outcome_sorted)
outcome_data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outputdf <- data.frame(hospital=character(), state = character())
states <- outcome_data[!duplicated(outcome_data[c('State')]),]$State
states <- sort(states)
state <- 'WY'
outcome='pneumonia'
state_outcome_data <- outcome_data[outcome_data$State==state,]
View(state_outcome_data)
View(state_outcome_data)
state_outcome_data_outcome_sorted <- state_outcome_data[order(as.numeric(state_outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia), state_outcome_data$Hospital.Name),]
View(state_outcome_data_outcome_sorted)
bad <- is.na(state_outcome_data_outcome_sorted$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia)
bad
state_outcome_data_outcome_sorted[ state_outcome_data_outcome_sorted == "Not Available" ] <- NA
bad <- is.na(state_outcome_data_outcome_sorted$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia)
bad
state_outcome_data_outcome_sorted <- state_outcome_data_outcome_sorted[!bad,]
rankhospital <- function(state, outcome, num = "best") {
## Read outcome data
## Read outcome data
outcome_data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
try(if(nrow(outcome_data[outcome_data$State==state,])==0) stop("invalid state"))
try(if(!(outcome=='heart attack' || outcome=='heart failure' || outcome=='pneumonia')) stop("invalid outcome"))
## Return hospital name in that state with the given rank
## Return hospital name in that state with lowest 30-day death
state_outcome_data <- outcome_data[outcome_data$State==state,]
state_outcome_data[ state_outcome_data == "Not Available" ] <- NA
#state_outcome_data[state_outcome_data$Hospital.Name=="FORT DUNCAN MEDICAL CENTER",]
if(outcome == 'heart attack'){
bad <- is.na(state_outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
state_outcome_data_good <- state_outcome_data[!bad,]
state_outcome_data_outcome_sorted <- state_outcome_data_good[order(as.numeric(state_outcome_data_good$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack), state_outcome_data_good$Hospital.Name),]
#state_outcome_data_outcome_sorted <- state_outcome_data_outcome_sorted[!is.na(state_outcome_data_outcome_sorted$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack),]
state_outcome_data_outcome_sorted$Rank <- 1:nrow(state_outcome_data_outcome_sorted)
state_outcome_data_outcome_sorted[(nrow(state_outcome_data_outcome_sorted)-6):nrow(state_outcome_data_outcome_sorted),c("Hospital.Name", "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack", "Rank")]
}
if(outcome == 'heart failure'){
bad <- is.na(state_outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure)
state_outcome_data_good <- state_outcome_data[!bad,]
state_outcome_data_outcome_sorted <- state_outcome_data_good[order(as.numeric(state_outcome_data_good$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure), state_outcome_data_good$Hospital.Name),]
state_outcome_data_outcome_sorted$Rank <- 1:nrow(state_outcome_data_outcome_sorted)
state_outcome_data_outcome_sorted[(nrow(state_outcome_data_outcome_sorted)-6):nrow(state_outcome_data_outcome_sorted),c("Hospital.Name", "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure", "Rank")]
}
if(outcome == 'pneumonia'){
bad <- is.na(state_outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia)
state_outcome_data_good <- state_outcome_data[!bad,]
state_outcome_data_outcome_sorted <- state_outcome_data_good[order(as.numeric(state_outcome_data_good$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia), state_outcome_data_good$Hospital.Name),]
state_outcome_data_outcome_sorted$Rank <- 1:nrow(state_outcome_data_outcome_sorted)
state_outcome_data_outcome_sorted[1:6,c("Hospital.Name", "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia", "Rank")]
}
## 30-day death rate
if(num == "best"){
hospitalName <- state_outcome_data_outcome_sorted[1,c("Hospital.Name")]
}else
if(num == "worst"){
hospitalName <- state_outcome_data_outcome_sorted[nrow(state_outcome_data_outcome_sorted),c("Hospital.Name")]
}else
if(num >=1 && num <= nrow(state_outcome_data_outcome_sorted)){
hospitalName <- state_outcome_data_outcome_sorted[num,c("Hospital.Name")]
}else{
hospitalName <- NA
}
hospitalName
}
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
rankall <- function(outcome, num = "best") {
## Read outcome data
outcome_data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outputdf <- data.frame(hospital=character(), state = character())
states <- outcome_data[!duplicated(outcome_data[c('State')]),]$State
states <- sort(states)
## Check that state and outcome are valid
#try(if(nrow(outcome_data[outcome_data$State==state,])==0) stop("invalid state"))
try(if(!(outcome=='heart attack' || outcome=='heart failure' || outcome=='pneumonia')) stop("invalid outcome"))
## Get data per sate
for(state in states ){
state_outcome_data <- outcome_data[outcome_data$State==state,]
state_outcome_data[ state_outcome_data == "Not Available" ] <- NA
if(outcome == 'heart attack'){
bad <- is.na(state_outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
state_outcome_data_good <- state_outcome_data[!bad,]
state_outcome_data_outcome_sorted <- state_outcome_data_good[order(as.numeric(state_outcome_data_good$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack), state_outcome_data_good$Hospital.Name),]
state_outcome_data_outcome_sorted$Rank <- 1:nrow(state_outcome_data_outcome_sorted)
#state_outcome_data_outcome_sorted[(nrow(state_outcome_data_outcome_sorted)-6):nrow(state_outcome_data_outcome_sorted),c("Hospital.Name", "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack", "Rank")]
}
if(outcome == 'heart failure'){
bad <- is.na(state_outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure)
state_outcome_data_good <- state_outcome_data[!bad,]
state_outcome_data_outcome_sorted <- state_outcome_data_good[order(as.numeric(state_outcome_data_good$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure), state_outcome_data_good$Hospital.Name),]
state_outcome_data_outcome_sorted$Rank <- 1:nrow(state_outcome_data_outcome_sorted)
#state_outcome_data_outcome_sorted[(nrow(state_outcome_data_outcome_sorted)-6):nrow(state_outcome_data_outcome_sorted),c("Hospital.Name", "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure", "Rank")]
}
if(outcome == 'pneumonia'){
bad <- is.na(state_outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia)
state_outcome_data_good <- state_outcome_data[!bad,]
state_outcome_data_outcome_sorted <- state_outcome_data_good[order(as.numeric(state_outcome_data_good$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia), state_outcome_data_good$Hospital.Name),]
state_outcome_data_outcome_sorted$Rank <- 1:nrow(state_outcome_data_outcome_sorted)
#state_outcome_data_outcome_sorted[1:6,c("Hospital.Name", "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia", "Rank")]
}
#print(state)
#print(nrow(state_outcome_data_outcome_sorted))
if(num == "best"){
hospitalName <- state_outcome_data_outcome_sorted[1,c("Hospital.Name")]
state <- state_outcome_data_outcome_sorted[1,c("State")]
outputdf <- rbind(outputdf, data.frame(hospital=hospitalName, state = state))
}else
if(num == "worst"){
count = nrow(state_outcome_data_outcome_sorted)-1
hospitalName <- state_outcome_data_outcome_sorted[count,c("Hospital.Name")]
state <- state_outcome_data_outcome_sorted[count,c("State")]
print(hospitalName)
print(count)
print(state)
outputdf <- rbind(outputdf, data.frame(hospital=hospitalName, state = state))
}else
if(num >=1 && num <= nrow(state_outcome_data_outcome_sorted)){
hospitalName <- state_outcome_data_outcome_sorted[num,c("Hospital.Name")]
state <- state_outcome_data_outcome_sorted[num,c("State")]
outputdf <- rbind(outputdf, data.frame(hospital=hospitalName, state = state))
}else{
hospitalName <- NA
outputdf <- rbind(outputdf, data.frame(hospital=hospitalName, state = state))
}
}
## For each state, find the hospital of the given rank
## Return a data frame with the hospital names and the
## (abbreviated) state name
outputdf <- outputdf[order(outputdf$state),]
outputdf
}
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
rankall <- function(outcome, num = "best") {
## Read outcome data
outcome_data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outputdf <- data.frame(hospital=character(), state = character())
states <- outcome_data[!duplicated(outcome_data[c('State')]),]$State
states <- sort(states)
## Check that state and outcome are valid
#try(if(nrow(outcome_data[outcome_data$State==state,])==0) stop("invalid state"))
try(if(!(outcome=='heart attack' || outcome=='heart failure' || outcome=='pneumonia')) stop("invalid outcome"))
## Get data per sate
for(state in states ){
state_outcome_data <- outcome_data[outcome_data$State==state,]
state_outcome_data[ state_outcome_data == "Not Available" ] <- NA
if(outcome == 'heart attack'){
bad <- is.na(state_outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
state_outcome_data_good <- state_outcome_data[!bad,]
state_outcome_data_outcome_sorted <- state_outcome_data_good[order(as.numeric(state_outcome_data_good$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack), state_outcome_data_good$Hospital.Name),]
state_outcome_data_outcome_sorted$Rank <- 1:nrow(state_outcome_data_outcome_sorted)
#state_outcome_data_outcome_sorted[(nrow(state_outcome_data_outcome_sorted)-6):nrow(state_outcome_data_outcome_sorted),c("Hospital.Name", "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack", "Rank")]
}
if(outcome == 'heart failure'){
bad <- is.na(state_outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure)
state_outcome_data_good <- state_outcome_data[!bad,]
state_outcome_data_outcome_sorted <- state_outcome_data_good[order(as.numeric(state_outcome_data_good$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure), state_outcome_data_good$Hospital.Name),]
state_outcome_data_outcome_sorted$Rank <- 1:nrow(state_outcome_data_outcome_sorted)
#state_outcome_data_outcome_sorted[(nrow(state_outcome_data_outcome_sorted)-6):nrow(state_outcome_data_outcome_sorted),c("Hospital.Name", "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure", "Rank")]
}
if(outcome == 'pneumonia'){
bad <- is.na(state_outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia)
state_outcome_data_good <- state_outcome_data[!bad,]
state_outcome_data_outcome_sorted <- state_outcome_data_good[order(as.numeric(state_outcome_data_good$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia), state_outcome_data_good$Hospital.Name),]
state_outcome_data_outcome_sorted$Rank <- 1:nrow(state_outcome_data_outcome_sorted)
#state_outcome_data_outcome_sorted[1:6,c("Hospital.Name", "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia", "Rank")]
}
#print(state)
#print(nrow(state_outcome_data_outcome_sorted))
if(num == "best"){
hospitalName <- state_outcome_data_outcome_sorted[1,c("Hospital.Name")]
state <- state_outcome_data_outcome_sorted[1,c("State")]
outputdf <- rbind(outputdf, data.frame(hospital=hospitalName, state = state))
}else
if(num == "worst"){
count = nrow(state_outcome_data_outcome_sorted)
hospitalName <- state_outcome_data_outcome_sorted[count,c("Hospital.Name")]
state <- state_outcome_data_outcome_sorted[count,c("State")]
print(hospitalName)
print(count)
print(state)
outputdf <- rbind(outputdf, data.frame(hospital=hospitalName, state = state))
}else
if(num >=1 && num <= nrow(state_outcome_data_outcome_sorted)){
hospitalName <- state_outcome_data_outcome_sorted[num,c("Hospital.Name")]
state <- state_outcome_data_outcome_sorted[num,c("State")]
outputdf <- rbind(outputdf, data.frame(hospital=hospitalName, state = state))
}else{
hospitalName <- NA
outputdf <- rbind(outputdf, data.frame(hospital=hospitalName, state = state))
}
}
## For each state, find the hospital of the given rank
## Return a data frame with the hospital names and the
## (abbreviated) state name
outputdf <- outputdf[order(outputdf$state),]
outputdf
}
tail(rankall("pneumonia", "worst"), 3)
library(dplyr)
best <- function(state, outcome) {
## Read outcome data
outcome_data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
try(if(nrow(outcome_data[outcome_data$State==state,])==0) stop("invalid state"))
try(if(!(outcome=='heart attack' || outcome=='heart failure' || outcome=='pneumonia')) stop("invalid outcome"))
## Return hospital name in that state with lowest 30-day death
state_outcome_data <- outcome_data[outcome_data$State==state,]
state_outcome_data[ state_outcome_data == "Not Available" ] = NA
good <- complete.cases(state_outcome_data)
state_outcome_data <- state_outcome_data[good,]
#state_outcome_data[state_outcome_data$Hospital.Name=="FORT DUNCAN MEDICAL CENTER",]
if(outcome == 'heart attack'){
state_outcome_data_outcome <- state_outcome_data[which.min(state_outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack),]
state_outcome_data_outcome_sorted <- arrange(state_outcome_data_outcome, Hospital.Name)
}
if(outcome == 'heart failure'){
state_outcome_data_outcome <- state_outcome_data[which.min(state_outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure),]
state_outcome_data_outcome_sorted <- arrange(state_outcome_data_outcome, Hospital.Name)
}
if(outcome == 'pneumonia'){
state_outcome_data_outcome <- state_outcome_data[which.min(state_outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia),]
state_outcome_data_outcome_sorted <- arrange(state_outcome_data_outcome, Hospital.Name)
}
## rate
state_outcome_data_outcome_sorted[1,]$Hospital.Name
}
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
r <- rankall("heart failure", 10)
as.character(subset(r, state == "NV")$hospital)
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
rankall <- function(outcome, num = "best") {
## Read outcome data
outcome_data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outputdf <- data.frame(hospital=character(), state = character())
states <- outcome_data[!duplicated(outcome_data[c('State')]),]$State
states <- sort(states)
## Check that state and outcome are valid
#try(if(nrow(outcome_data[outcome_data$State==state,])==0) stop("invalid state"))
try(if(!(outcome=='heart attack' || outcome=='heart failure' || outcome=='pneumonia')) stop("invalid outcome"))
## Get data per sate
for(state in states ){
state_outcome_data <- outcome_data[outcome_data$State==state,]
state_outcome_data[ state_outcome_data == "Not Available" ] <- NA
if(outcome == 'heart attack'){
bad <- is.na(state_outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
state_outcome_data_good <- state_outcome_data[!bad,]
state_outcome_data_outcome_sorted <- state_outcome_data_good[order(as.numeric(state_outcome_data_good$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack), state_outcome_data_good$Hospital.Name),]
state_outcome_data_outcome_sorted$Rank <- 1:nrow(state_outcome_data_outcome_sorted)
#state_outcome_data_outcome_sorted[(nrow(state_outcome_data_outcome_sorted)-6):nrow(state_outcome_data_outcome_sorted),c("Hospital.Name", "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack", "Rank")]
}
if(outcome == 'heart failure'){
bad <- is.na(state_outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure)
state_outcome_data_good <- state_outcome_data[!bad,]
state_outcome_data_outcome_sorted <- state_outcome_data_good[order(as.numeric(state_outcome_data_good$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure), state_outcome_data_good$Hospital.Name),]
state_outcome_data_outcome_sorted$Rank <- 1:nrow(state_outcome_data_outcome_sorted)
#state_outcome_data_outcome_sorted[(nrow(state_outcome_data_outcome_sorted)-6):nrow(state_outcome_data_outcome_sorted),c("Hospital.Name", "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure", "Rank")]
}
if(outcome == 'pneumonia'){
bad <- is.na(state_outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia)
state_outcome_data_good <- state_outcome_data[!bad,]
state_outcome_data_outcome_sorted <- state_outcome_data_good[order(as.numeric(state_outcome_data_good$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia), state_outcome_data_good$Hospital.Name),]
state_outcome_data_outcome_sorted$Rank <- 1:nrow(state_outcome_data_outcome_sorted)
#state_outcome_data_outcome_sorted[1:6,c("Hospital.Name", "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia", "Rank")]
}
#print(state)
#print(nrow(state_outcome_data_outcome_sorted))
if(num == "best"){
hospitalName <- state_outcome_data_outcome_sorted[1,c("Hospital.Name")]
state <- state_outcome_data_outcome_sorted[1,c("State")]
outputdf <- rbind(outputdf, data.frame(hospital=hospitalName, state = state))
}else
if(num == "worst"){
count = nrow(state_outcome_data_outcome_sorted)
hospitalName <- state_outcome_data_outcome_sorted[count,c("Hospital.Name")]
state <- state_outcome_data_outcome_sorted[count,c("State")]
outputdf <- rbind(outputdf, data.frame(hospital=hospitalName, state = state))
}else
if(num >=1 && num <= nrow(state_outcome_data_outcome_sorted)){
hospitalName <- state_outcome_data_outcome_sorted[num,c("Hospital.Name")]
state <- state_outcome_data_outcome_sorted[num,c("State")]
outputdf <- rbind(outputdf, data.frame(hospital=hospitalName, state = state))
}else{
hospitalName <- NA
outputdf <- rbind(outputdf, data.frame(hospital=hospitalName, state = state))
}
}
## For each state, find the hospital of the given rank
## Return a data frame with the hospital names and the
## (abbreviated) state name
outputdf <- outputdf[order(outputdf$state),]
outputdf
}
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
r <- rankall("heart failure", 10)
as.character(subset(r, state == "NV")$hospital)
